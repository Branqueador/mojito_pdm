{"version":3,"sources":["utils/misc.ts","utils/fetchNui.ts","hooks/useExitListener.ts","logo.png","components/CategorySelect.tsx","components/Header.tsx","components/ModalBody.tsx","components/VehCard.tsx","components/Content.tsx","components/Catalogue.tsx","components/App.tsx","hooks/useNuiEvent.ts","index.tsx"],"names":["noop","fetchNui","eventName","data","a","options","method","headers","body","JSON","stringify","resourceName","window","GetParentResourceName","fetch","resp","respFormatted","json","LISTENED_KEYS","CategorySelect","cat","setCat","theme","useTheme","FormControl","variant","sx","margin","spacing","minWidth","color","InputLabel","id","Select","labelId","value","onChange","event","target","label","MenuItem","Header","props","colorMode","useContext","ColorModeContext","AppBar","position","Toolbar","backgroundColor","Typography","flex","src","logo","height","alt","IconButton","ml","onClick","toggleColorMode","palette","mode","then","dispatchEvent","MessageEvent","action","catch","e","console","error","getModalStyle","top","left","transform","ModalBody","name","brand","description","price","trunkspace","setOpen","performance","handleClose","useState","modalStyle","style","width","background","paper","boxShadow","shadows","padding","LinearProgress","power","acceleration","handling","topspeed","Stack","direction","Button","size","VehCard","brandLogo","image","category","spawncode","useEffect","log","open","Card","CardHeader","avatar","maxWidth","maxHeight","title","subheader","CardMedia","CardActions","Tooltip","TransitionComponent","Zoom","arrow","startIcon","vehicle","disableElevation","Modal","onClose","aria-labelledby","aria-describedby","Content","setData","limit","setLimit","maxdepth","setMaxdepth","limits","temp","count","i","push","cardata","cars","filter","car","Grid","container","map","obj","index","item","xs","sm","getVehicleCard","className","catlimit","length","fullWidth","disabled","Catalogue","createContext","App","isVisible","setIsVisible","setMode","useMemo","prevMode","createTheme","primary","blue","text","grey","secondary","handler","savedHandler","useRef","current","eventListener","eventAction","addEventListener","removeEventListener","useNuiEvent","visibleSetter","setterRef","keyHandler","includes","code","useExitListener","Provider","ThemeProvider","visibility","Box","Paper","elevation","minHeight","overflowY","CssBaseline","ReactDOM","render","StyledEngineProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.02057003.chunk.js","sourcesContent":["// Will return whether the current environment is in a regular browser\r\n// and not CEF\r\nexport const isEnvBrowser = (): boolean => !(window as any).invokeNative\r\n\r\n// Basic no operation function\r\nexport const noop = () => {}","/**\r\n * Simple wrapper around fetch API tailored for CEF/NUI use. This abstraction\r\n * can be extended to include AbortController if needed or if the response isn't\r\n * JSON. Tailor it to your needs.\r\n *\r\n * @param eventName - The endpoint eventname to target\r\n * @param data - Data you wish to send in the NUI Callback\r\n *\r\n * @return returnData - A promise for the data sent back by the NuiCallbacks CB argument\r\n */\r\n\r\nexport async function fetchNui<T = any>(eventName: string, data?: any): Promise<T> {\r\n  const options = {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  const resourceName = (window as any).GetParentResourceName ? (window as any).GetParentResourceName() : 'mojito_pdm';\r\n\r\n  const resp = await fetch(`https://${resourceName}/${eventName}`, options);\r\n\r\n  const respFormatted = resp.json()\r\n\r\n  return respFormatted\r\n}","import {useEffect, useRef} from \"react\";\r\nimport {noop} from \"../utils/misc\";\r\nimport {fetchNui} from \"../utils/fetchNui\";\r\n\r\ntype FrameVisibleSetter = (bool: boolean) => void\r\n\r\nconst LISTENED_KEYS = [\"Escape\", \"Backspace\"]\r\n\r\n// Basic hook to listen for key presses in NUI in order to exit\r\nexport const useExitListener = (visibleSetter: FrameVisibleSetter) => {\r\n  const setterRef = useRef<FrameVisibleSetter>(noop)\r\n\r\n  useEffect(() => {\r\n    setterRef.current = visibleSetter\r\n  }, [visibleSetter])\r\n\r\n  useEffect(() => {\r\n    const keyHandler = (e: KeyboardEvent) => {\r\n      if (LISTENED_KEYS.includes(e.code)) {\r\n        setterRef.current(false)\r\n        fetchNui('exit')\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", keyHandler)\r\n\r\n    return () => window.removeEventListener(\"keydown\", keyHandler)\r\n  }, []);\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/logo.97119cdf.png\";","import React, {Dispatch, SetStateAction} from 'react'\r\nimport {\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    SelectChangeEvent\r\n} from '@mui/material'\r\nimport {useTheme} from \"@mui/material/styles\";\r\n\r\ninterface CategorySelect {\r\n    cat: string;\r\n    setCat: Dispatch<SetStateAction<string>>\r\n}\r\n\r\nconst CategorySelect: React.FC<CategorySelect> = ({cat, setCat}) => {\r\n    const theme = useTheme()\r\n\r\n    const handleChange = (event: SelectChangeEvent) => {\r\n        setCat(event.target.value)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <FormControl variant=\"outlined\" sx={{margin: theme.spacing(1), minWidth: 240}} color=\"error\">\r\n                    <InputLabel sx={{color: \"white\"}} id=\"demo-simple-select-outlined-label\">Category</InputLabel>\r\n                    <Select sx={{color: \"white\"}}\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={cat}\r\n                            onChange={handleChange}\r\n                            label=\"Category\"\r\n                    >\r\n                        <MenuItem value=\"\">\r\n                            <em>All</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={\"Sports\"}>Sports</MenuItem>\r\n                        <MenuItem value={\"Compacts\"}>Compacts</MenuItem>\r\n                        <MenuItem value={\"Muscle\"}>Muscle</MenuItem>\r\n                        <MenuItem value={\"Sedan\"}>Sedan</MenuItem>\r\n                        <MenuItem value={\"Coupe\"}>Coupé</MenuItem>\r\n                        <MenuItem value={\"Super\"}>Super</MenuItem>\r\n                        <MenuItem value={\"SUV\"}>SUV</MenuItem>\r\n                        <MenuItem value={\"Vans\"}>Vans</MenuItem>\r\n                        <MenuItem value={\"Offroad\"}>Offroad</MenuItem>\r\n                        <MenuItem value={\"Sports Classics\"}>Sports Classics</MenuItem>\r\n                        <MenuItem value={\"Motorcycles\"}>Motorcycles</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategorySelect","import React, {Dispatch, SetStateAction, useContext} from 'react'\r\nimport {useTheme} from '@mui/material/styles';\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Typography\r\n} from '@mui/material'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\nimport logo from '../logo.png';\r\nimport {ColorModeContext} from \"./App\";\r\nimport CategorySelect from \"./CategorySelect\";\r\nimport {fetchNui} from \"../utils/fetchNui\";\r\n\r\ninterface Header {\r\n    cat: string;\r\n    setCat: Dispatch<SetStateAction<string>>\r\n}\r\n\r\nconst Header: React.FC<Header> = (props) => {\r\n    const theme = useTheme();\r\n    const colorMode = useContext(ColorModeContext);\r\n\r\n    const handleExit = () => {\r\n        fetchNui(\"exit\").then(() => {\r\n            window.dispatchEvent(\r\n                new MessageEvent(\"message\", {\r\n                    data: {\r\n                        action: \"setVisible\",\r\n                        data: false,\r\n                    },\r\n                })\r\n            );\r\n        }).catch(e => {\r\n            console.error(e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"sticky\">\r\n            <Toolbar sx={{backgroundColor: \"primary.dark\"}}>\r\n                <Typography sx={{flex: 1}}>\r\n                    <img src={logo} height=\"100px\" alt=\"\"/>\r\n                </Typography>\r\n\r\n                <CategorySelect {...props} />\r\n                <IconButton sx={{ml: 1}} onClick={colorMode.toggleColorMode} color=\"inherit\">\r\n                    {theme.palette.mode === 'dark' ? <Brightness7Icon/> : <Brightness4Icon/>}\r\n                </IconButton>\r\n                <IconButton sx={{ml: 1}} onClick={handleExit} color=\"inherit\">\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Dispatch, useState, SetStateAction} from 'react'\r\nimport {useTheme} from \"@mui/material/styles\";\r\nimport {Button, Stack, Typography, LinearProgress} from '@mui/material'\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n    }\r\n}\r\n\r\ninterface Modal {\r\n    name: string,\r\n    brand: string,\r\n    description: string,\r\n    price: string;\r\n    trunkspace: string,\r\n    setOpen: Dispatch<SetStateAction<boolean>>\r\n    performance: CarPerformance\r\n}\r\n\r\nconst ModalBody: React.FC<Modal> = ({name, brand, description, price, trunkspace, setOpen, performance}) => {\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    const [modalStyle] = useState(getModalStyle)\r\n    const theme = useTheme()\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                ...modalStyle,\r\n                position: \"absolute\",\r\n                width: 600,\r\n                backgroundColor: theme.palette.background.paper,\r\n                boxShadow: theme.shadows[7],\r\n                padding: theme.spacing(2, 4, 3),\r\n                color: theme.palette.mode === \"dark\" ? \"white\" : \"black\"\r\n            }}>\r\n                <h2 id=\"simple-modal-title\">{`${brand} ${name}`}</h2>\r\n                <h4>\r\n                    Price: {price} <br/>\r\n                    Trunk Space: {trunkspace}\r\n                </h4>\r\n                {performance &&\r\n                <Typography>\r\n                    Power <LinearProgress value={performance.power} variant=\"determinate\"/>\r\n                    Acceleration <LinearProgress value={performance.acceleration} variant=\"determinate\"/>\r\n                    Handling <LinearProgress value={performance.handling} variant=\"determinate\"/>\r\n                    Top Speed <LinearProgress value={performance.topspeed} variant=\"determinate\"/>\r\n                </Typography>\r\n                }\r\n                <p>\r\n                    {description}\r\n                </p>\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Button size=\"small\" variant=\"outlined\" color=\"error\" onClick={handleClose}>Close</Button>\r\n                    <Button size=\"small\" variant=\"outlined\" color=\"primary\" onClick={handleClose}>Buy</Button>\r\n                </Stack>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalBody","import React, {useEffect, useState} from 'react'\r\nimport DirectionsCarIcon from '@mui/icons-material/DirectionsCar'\r\nimport AssignmentIcon from '@mui/icons-material/Assignment'\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardMedia,\r\n    Button,\r\n    Modal,\r\n    Tooltip,\r\n    Zoom,\r\n    CardActions\r\n} from '@mui/material'\r\nimport {fetchNui} from \"../utils/fetchNui\";\r\nimport {useTheme} from \"@mui/material/styles\";\r\nimport ModalBody from './ModalBody'\r\n\r\nconst VehCard: React.FC<Car> = ({\r\n    name,\r\n    brand,\r\n    description,\r\n    brandLogo,\r\n    image,\r\n    price,\r\n    category,\r\n    spawncode,\r\n    trunkspace,\r\n    performance\r\n}) => {\r\n    const theme = useTheme();\r\n\r\n    useEffect(() => {\r\n        console.log(name)\r\n    }, [])\r\n\r\n\r\n    const [open, setOpen] = useState<boolean>(false)\r\n    const testDrive = () => {\r\n        fetchNui(\"test_drive\", {vehicle: spawncode}).then()\r\n    }\r\n\r\n    // Functions\r\n    const handleOpen = () => setOpen(true)\r\n    const handleClose = () => setOpen(false)\r\n\r\n    return (\r\n        <Card sx={{\r\n            boxShadow: theme.shadows[3],\r\n            margin: theme.spacing(2)\r\n        }} variant=\"outlined\">\r\n            <CardHeader\r\n                avatar={<img height={40} style={{maxWidth: 100, maxHeight: 40}} src={brandLogo} alt={brand}/>}\r\n                title={name}\r\n                subheader={category}\r\n            />\r\n            <CardMedia style={{height: \"150px\"}} image={image}/>\r\n            <CardActions>\r\n                <Tooltip TransitionComponent={Zoom} sx={{maxWidth: 120}} arrow title=\"Test drive this vehicle\">\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant={theme.palette.mode == \"dark\" ? \"contained\" : \"outlined\"}\r\n                        color=\"primary\"\r\n                        startIcon={<DirectionsCarIcon/>}\r\n                        onClick={testDrive}\r\n                        disableElevation\r\n                    >\r\n                        TEST DRIVE\r\n                    </Button>\r\n                </Tooltip>\r\n                <Tooltip TransitionComponent={Zoom} arrow sx={{maxWidth: 120}}\r\n                         title=\"View more information about this vehicle\">\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant={theme.palette.mode == \"dark\" ? \"contained\" : \"outlined\"}\r\n                        color=\"primary\"\r\n                        startIcon={<AssignmentIcon/>}\r\n                        onClick={handleOpen}\r\n                        disableElevation\r\n                    >\r\n                        MORE INFO\r\n                    </Button>\r\n                </Tooltip>\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                >\r\n                    {<ModalBody\r\n                        name={name}\r\n                        brand={brand}\r\n                        description={description}\r\n                        price={price}\r\n                        trunkspace={trunkspace}\r\n                        setOpen={setOpen}\r\n                        performance={performance}\r\n                    />}\r\n                </Modal>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default VehCard","import React, {useState, useEffect, Dispatch, SetStateAction} from 'react'\r\nimport {Grid, Button} from '@mui/material'\r\nimport cardata from '../cars.json';\r\nimport VehCard from './VehCard'\r\nimport {useTheme} from \"@mui/material/styles\";\r\n\r\nconst getVehicleCard = (index: number, obj: Car) => {\r\n    return (\r\n        <Grid item xs={12} sm={4}>\r\n            <VehCard key={index} {...obj} />\r\n        </Grid>\r\n    )\r\n}\r\n\r\ninterface Content {\r\n    cat: string;\r\n}\r\n\r\nconst Content: React.FC<Content> = ({cat}) => {\r\n    const [data, setData] = useState<Car[]>([])\r\n    const [limit, setLimit] = useState<number>(12)\r\n    const [maxdepth, setMaxdepth] = useState<boolean>(false)\r\n\r\n    const theme = useTheme()\r\n\r\n    const limits: Limits = {\r\n        \"Compacts\": 0,\r\n        \"Coupe\": 0,\r\n        \"Motorcycles\": 0,\r\n        \"Muscle\": 0,\r\n        \"Offroad\": 0,\r\n        \"SUV\": 0,\r\n        \"Sedan\": 0,\r\n        \"Sports\": 0,\r\n        \"Sports Classics\": 0,\r\n        \"Super\": 0,\r\n        \"Vans\": 0\r\n    }\r\n\r\n    useEffect(() => {\r\n        let temp: Car[] = []\r\n\r\n        let count = limit\r\n        if (cat === \"Compacts\") {\r\n            count = 10\r\n        }\r\n\r\n        if (cat === \"\") {\r\n            for (let i = 0; i < limit; i++) {\r\n                temp.push(cardata[i])\r\n            }\r\n\r\n            return setData(temp)\r\n        }\r\n\r\n        let cars = cardata.filter((car) => car.category === cat)\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            temp.push(cars[i])\r\n        }\r\n        setData(temp)\r\n    }, [cat, limit])\r\n\r\n    useEffect(() => {\r\n        setLimit(12)\r\n        setMaxdepth(false)\r\n    }, [cat])\r\n\r\n    const handleLimit = () => {\r\n        let catlimit;\r\n        if (cat === \"\") {\r\n            catlimit = cardata.length\r\n        } else {\r\n            for (let car of cardata) {\r\n                limits[car.category] += 1\r\n            }\r\n            catlimit = limits[cat]\r\n        }\r\n\r\n        if (limit + 12 > catlimit) {\r\n            setLimit(catlimit)\r\n            setMaxdepth(true)\r\n        } else {\r\n            setLimit(limit + 12)\r\n            setMaxdepth(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={1}>\r\n                {data.map((obj, index) => getVehicleCard(index, obj))}\r\n            </Grid>\r\n\r\n            <div className=\"loadbutton\">\r\n                <Button sx={{\r\n                    margin: theme.spacing(0, 0, 1, 0)\r\n                }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleLimit}\r\n                    fullWidth\r\n                    disabled={maxdepth}\r\n                >\r\n\r\n                    Show More\r\n\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content","import React, {useState} from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Header from \"./Header\";\r\nimport Content from \"./Content\";\r\n\r\nconst Catalogue: React.FC = () => {\r\n    const [cat, setCat] = useState<string>(\"\")\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item>\r\n                <Header\r\n                    cat={cat}\r\n                    setCat={setCat}\r\n                />\r\n            </Grid>\r\n            <Grid item container>\r\n                <Grid item xs={false} sm={1} />\r\n\r\n                <Grid item xs={12} sm={10}>\r\n                    <Content\r\n                        cat={cat}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={false} sm={1} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Catalogue;","import React, {useState, useMemo, createContext} from 'react';\r\nimport './App.css'\r\nimport {useNuiEvent} from \"../hooks/useNuiEvent\";\r\nimport {debugData} from \"../utils/debugData\";\r\nimport {useExitListener} from \"../hooks/useExitListener\";\r\nimport Box from '@mui/material/Box';\r\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\r\nimport Catalogue from \"./Catalogue\";\r\nimport Paper from '@mui/material/Paper'\r\nimport {blue, grey} from '@mui/material/colors';\r\nimport {CssBaseline} from \"@mui/material\";\r\n\r\n\r\ndebugData([\r\n    {\r\n        action: 'setVisible',\r\n        data: true,\r\n    }\r\n])\r\n\r\nexport const ColorModeContext: React.Context<any> = createContext({\r\n    toggleColorMode: () => {\r\n    }\r\n});\r\n\r\nconst App: React.FC = () => {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [mode, setMode] = useState<'light' | 'dark'>('light');\r\n    const colorMode = useMemo(\r\n        () => ({\r\n            toggleColorMode: () => {\r\n                setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n            },\r\n        }),\r\n        [],\r\n    );\r\n\r\n    const theme = useMemo(\r\n        () =>\r\n            createTheme({\r\n                palette: {\r\n                    mode,\r\n                    ...(mode === 'light'\r\n                        ? {\r\n                            // palette values for light mode\r\n                            primary: blue,\r\n                            text: {\r\n                                primary: grey[900],\r\n                                secondary: grey[800],\r\n                            }\r\n                        }\r\n                        : {\r\n                            // palette values for dark mode\r\n                            primary: blue,\r\n                            text: {\r\n                                primary: '#fff',\r\n                                secondary: grey[500],\r\n                            },\r\n                        }),\r\n                },\r\n            }),\r\n        [mode],\r\n    );\r\n\r\n\r\n    useNuiEvent<boolean>('setVisible', (data) => {\r\n        setIsVisible(data)\r\n    })\r\n    useExitListener(setIsVisible)\r\n\r\n    return (\r\n        <ColorModeContext.Provider value={colorMode}>\r\n            <ThemeProvider theme={theme}>\r\n                <div className=\"container\" style={{visibility: isVisible ? \"visible\" : \"hidden\"}}>\r\n                    <Box sx={{\r\n                        width: 1100,\r\n                        height: 600,\r\n                        maxHeight: 600,\r\n                    }}>\r\n                        <Paper elevation={2} sx={{minHeight: \"100%\", maxHeight: 600, overflowY: \"scroll\"}}>\r\n                            <Catalogue/>\r\n                        </Paper>\r\n                    </Box>\r\n                </div>\r\n                <CssBaseline />\r\n            </ThemeProvider>\r\n        </ColorModeContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {MutableRefObject, useEffect, useRef} from \"react\";\r\nimport {noop} from \"../utils/misc\";\r\n\r\ninterface NuiMessageData<T = unknown> {\r\n  action: string;\r\n  data: T;\r\n}\r\n\r\ntype NuiHandlerSignature<T> = (data: T) => void;\r\n\r\n/**\r\n * A hook that manage events listeners for receiving data from the client scripts\r\n * @param action The specific `action` that should be listened for.\r\n * @param handler The callback function that will handle data relayed by this hook\r\n *\r\n * @example\r\n * useNuiEvent<{visibility: true, wasVisible: 'something'}>('setVisible', (data) => {\r\n *   // whatever logic you want\r\n * })\r\n *\r\n **/\r\n\r\nexport const useNuiEvent = <T = any>(\r\n  action: string,\r\n  handler: (data: T) => void\r\n) => {\r\n  const savedHandler: MutableRefObject<NuiHandlerSignature<T>> = useRef(noop);\r\n\r\n  // When handler value changes set mutable ref to handler val\r\n  useEffect(() => {\r\n    savedHandler.current = handler;\r\n  }, [handler]);\r\n\r\n  useEffect(() => {\r\n    const eventListener = (event: MessageEvent<NuiMessageData<T>>) => {\r\n      const { action: eventAction, data } = event.data;\r\n\r\n      if (savedHandler.current) {\r\n        if (eventAction === action) {\r\n          savedHandler.current(data);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"message\", eventListener);\r\n    // Remove Event Listener on component cleanup\r\n    return () => window.removeEventListener(\"message\", eventListener);\r\n  }, [action]);\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport {StyledEngineProvider} from '@mui/material/styles';\r\n\r\nReactDOM.render(\r\n    <StyledEngineProvider injectFirst>\r\n        <App/>\r\n    </StyledEngineProvider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}